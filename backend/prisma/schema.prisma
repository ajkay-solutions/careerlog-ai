generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Competency {
  id                 String    @id
  userId             String
  name               String
  framework          String?
  description        String?
  demonstrationCount Int       @default(0)
  lastDemonstrated   DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now())
  User               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, name])
  @@index([userId, demonstrationCount])
  @@index([userId, framework])
  @@index([userId])
  @@index([userId, lastDemonstrated])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Entry {
  id            String   @id
  userId        String
  date          DateTime
  rawText       String
  wordCount     Int      @default(0)
  extractedData Json?
  projectIds    String[] @default([])
  skillIds      String[] @default([])
  competencyIds String[] @default([])
  isHighlight   Boolean  @default(false)
  sentiment     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  User          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
  @@index([date])
  @@index([userId, createdAt])
  @@index([userId, date])
  @@index([userId, isHighlight])
  @@index([userId, sentiment])
  @@index([userId, wordCount])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Project {
  id          String    @id
  userId      String
  name        String
  description String?
  status      String    @default("active")
  startDate   DateTime?
  endDate     DateTime?
  entryCount  Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, name])
  @@index([userId, entryCount])
  @@index([userId])
  @@index([userId, status])
  @@index([userId, updatedAt])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Skill {
  id         String   @id
  userId     String
  name       String
  category   String?
  firstUsed  DateTime @default(now())
  lastUsed   DateTime @default(now())
  usageCount Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, name])
  @@index([userId, category])
  @@index([userId])
  @@index([userId, lastUsed])
  @@index([userId, usageCount])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id           String         @id
  email        String         @unique
  provider     String
  providerId   String
  displayName  String?
  name         Json?
  profilePhoto String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  lastLoginAt  DateTime?
  Competency   Competency[]
  Entry        Entry[]
  Project      Project[]
  Skill        Skill[]
  UserProvider UserProvider[]
  UserSettings UserSettings?

  @@unique([provider, providerId])
  @@index([email])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model UserSettings {
  id              String   @id
  userId          String   @unique
  reminderTime    String?
  reminderEnabled Boolean  @default(true)
  aiPromptStyle   String   @default("balanced")
  defaultTags     String[] @default([])
  allowExport     Boolean  @default(true)
  allowAnalytics  Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  User            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model UserProvider {
  id           String   @id @default(dbgenerated("(gen_random_uuid())::text"))
  userId       String
  provider     String
  providerId   String
  displayName  String?
  email        String?
  profilePhoto String?
  accessToken  String?
  refreshToken String?
  profileData  Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  lastUsed     DateTime @default(now())
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerId])
  @@unique([userId, provider])
  @@index([provider])
  @@index([userId])
  @@index([userId, lastUsed])
}
