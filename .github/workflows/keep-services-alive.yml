name: Keep Render Services Alive

on:
  schedule:
    # Run every 10 minutes to prevent Render free tier from sleeping
    # Render services sleep after 15 minutes of inactivity
    - cron: '*/10 * * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    
    steps:
    - name: Ping WorkLog AI Backend
      run: |
        echo "üî• Pinging WorkLog AI Backend to keep it alive..."
        
        # Ping backend health endpoint
        backend_response=$(curl -s -o /dev/null -w "%{http_code}" https://worklog-ai-backend.onrender.com/health)
        
        if [ "$backend_response" -eq 200 ]; then
          echo "‚úÖ Backend is alive (HTTP $backend_response)"
        else
          echo "‚ö†Ô∏è Backend responded with HTTP $backend_response"
        fi
        
        # Also ping a lightweight endpoint to ensure the service stays warm
        quick_response=$(curl -s -o /dev/null -w "%{http_code}" https://worklog-ai-backend.onrender.com/api/health/quick)
        
        if [ "$quick_response" -eq 200 ]; then
          echo "‚úÖ Quick health check passed (HTTP $quick_response)"
        else
          echo "‚ö†Ô∏è Quick health check failed (HTTP $quick_response)"
        fi

    - name: Ping WorkLog AI Frontend
      run: |
        echo "üî• Pinging WorkLog AI Frontend to keep it alive..."
        
        # Ping frontend
        frontend_response=$(curl -s -o /dev/null -w "%{http_code}" https://worklog.ajkaysolutions.com)
        
        if [ "$frontend_response" -eq 200 ]; then
          echo "‚úÖ Frontend is alive (HTTP $frontend_response)"
        else
          echo "‚ö†Ô∏è Frontend responded with HTTP $frontend_response"
        fi

    - name: Summary
      run: |
        echo "üéØ Keep-alive ping completed at $(date)"
        echo "üìä This prevents Render free tier services from sleeping"
        echo "‚è∞ Next ping scheduled in 10 minutes"